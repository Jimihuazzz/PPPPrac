#include <cstdio>
#include <iostream>
#include <cmath>
#include <cstring>
#include <string>
using namespace std; 
long long zc=0;//记录最多次数
int n;//记录单词个数
string dc[20];//存单词
int yg[20];//记录剩余次数
void jl(string dq,string sg)
{
    int lsg=sg.size();
    for(int i=0;i<n;i++)
    {
        int lc=dc[i].size();
        bool tf=false;
        int jk=0;
        if(sg.size()==1&&dc[i][0]==sg[0])tf=true;
		//如果是第一个则直接可行
        if(!tf&&yg[i]!=0)//判断是否可以进入判断
{//下方为判断两个单词是否可以连接，并得出连接点

            for(int j=lsg-1;j>0;j--)
            {
                bool tc=true;
                for(int k=0;k<lc-1&&j+k<lsg;k++)
                {
                    if(sg[j+k]!=dc[i][k])
                    {
                        tc=false;
                        break;
                    }
                }
                if(tc==true)
                {
                    jk=lsg-j;
                    tf=true;
                }
                if(tf==true&&tc==false)break;
            }
}//判断完毕

        if(tf==true)
        {
            yg[i]--;
            string ndq=dq;
//            cout<<dc[i]<<endl;
            for(int j=jk;j<lc;j++)
            	ndq+=dc[i][j];//加入新的字符串部分
            cout<<"ndq=     "<<ndq<<"     "<<endl;
            jl(ndq,dc[i]);//递归
            yg[i]++;
        }
    }
    
    if(zc<dq.size())
    	zc=dq.size();//贪心； 
//    cout<<dq<<endl;
}
int main()
{
    for(int i=0;i<20;i++)
		yg[i]=2;//判断是否用完的数组。
	//初始化，每个单词可用两次。
    string dr;
    cin>>n;//个数
    for(int i=0;i<n;i++)
    	cin>>dc[i];//记录所有的单词
    cin>>dr;//首字母，用字符串储存以放入函数的方便
    jl("",dr);//开始计算
    cout<<zc;//输出最多的次数
    return 0;
}
